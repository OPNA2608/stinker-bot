--[[ COMMAND FUNCTIONS ]]
--[[ 
  || the various functions that get called via the chat commands
  || * pinging the bot                          (ping)
  || * sending a message over the bot           (msg)
  || * randomly selecting a quote               (quote)
  || * adding a quote                           (serialize)
  || * printing the size of the code            (_size)
  || * constructing and printing the help text  (help)
--]]


commands {
    help    = {
                fn    = function ( data )
                
                          local ORDER    = {
                            COMMANDS.ping,
                            COMMANDS.message,
                            COMMANDS.quote,
                            COMMANDS.quote_add,
                            
                            COMMANDS._SEPARATOR,
                            
                            COMMANDS._size,
                            
                            COMMANDS._SEPARATOR,
                            
                            COMMANDS._NOTES,
                            COMMANDS._TODO,
                          }
                
                          local textHelp =  "```\n"
                                            .. "Available commands:\n"
                                            .. "\n"
                                            .. "\n"
                          
                          for k,v in ipairs(ORDER) do
                            
                            local textCommand = v.help
                            textHelp =  textHelp 
                                        .. textCommand[1]
                                        .. "\n"
                            
                            for i=2,#textCommand do
                              textHelp =  textHelp 
                                          .. "\t* "
                                          .. textCommand[i]
                                          .. "\n"
                            end
                            
                            textHelp =  textHelp
                                        .. "\n"
                            
                          end
                          
                          textHelp =  textHelp
                                      .. "My source code can be found at:\n"
                                      .. "https://github.com/OPNA2608/stinker-bot\n\n"
                          
                          textHelp =  textHelp
                                      .. "BEESH BEESH! ;)```"
                          
                          data.channel:send( textHelp )
                          
                        end,
                help  = {
                          "!sbl_help",
                          "displays this helpful message",
                        },
              },
              
    ping    = {
                fn    = function( data )
                          data.channel:send('Beesh!')
                        end,
                help  = {
                          "!sbl_ping",
                          "basic ping to the bot",
                          "responds with \"Beesh!\" if everything's alright",
                        },
              },
              
    message = {
                fn    = function( data )
                          data.channel:send( data.arguments )
                        end,
                help  = {
                          "!sbl_message <data>",
                          "responds with the specified message (text-only, no attachments!)",
                        },
              },
              
    quote     = {
                  fn    = function( data )
                            local rng     = QUOTES[math.random(#QUOTES)]
                            local message = ""
                            if not rng then
                              message = "No quotes were added to my database yet.\n"
                                        .. "Try adding some with !sbl_quote_add first!"
                            else
                              local msg = "`" .. rng.text .. "`"
                              if rng.by then
                                msg = msg
                                .. "\n*-added by "
                                .. rng.by
                                .. "*"
                              end
                              if rng.attachments then
                                local tmp = msg
                                msg = {
                                  content = tmp,
                                  files = rng.attachments,
                                }
                              end
                              message = msg
                            end
                            data.channel:send( message )
                          end,
                  help  = {
                            "!sbl_quote",
                            "responds with a random BunceQuote™",
                          },
                },
              
    quote_add = {
                  fn    = function( data )
                            local iNewQuote   = #QUOTES+1
                            QUOTES[iNewQuote] = {}
                            local newQuote    = QUOTES[iNewQuote]

                            newQuote.text     = data.arguments
                            newQuote.by       = data.user.username
                            newQuote.attachments = {}
                            if #data.attachments > 0 then
                              
                              local pathDelim = package.config:sub(1,1)
                              local isNix = pathDelim == "/"
                              local mkdir = "mkdir"
                              local pwdCmd    = isNix and "pwd" or "cd"
                              local pwdHandle = io.popen( pwdCmd, "r" )
                              local pwd       = pwdHandle
                                                :read("*a")
                                                :gsub("\n", "")
                                                .. pathDelim
                              pwdHandle:close()
                              
                              local prepDir = function(dir)
                                local test = io.open(dir, "r")
                                if test then
                                  test:close()
                                else
                                  os.execute( mkdir
                                              .. " \""
                                              .. dir
                                              .. "\""
                                            )
                                end
                              end
                              
                              local dir = pwd
                                          .. "uploads"
                                          .. pathDelim
                              prepDir( dir )
                              
                              dir = dir
                                    .. tostring(iNewQuote)
                                    .. pathDelim
                              prepDir( dir )
                              
                              for k,v in ipairs(data.attachments) do
                                local fileDir = dir
                                                .. tostring(k)
                                                .. "/"
                                prepDir(fileDir)
                                fileDir = fileDir .. v.filename
                                --Linux-only
                                if isNix then
                                  os.execute( "wget \""
                                              .. v.url
                                              .. "\" -O \""
                                              .. fileDir
                                              .. "\"" )
                                  table.insert( newQuote.attachments,
                                    fileDir )
                                else
                                  log( "Refusing to download attachment on Windows: no backwards-compatible alternative to wget/curl (besides PowerShell). Sry :c", "err" )
                                end
                              end
                            end

                            serialize()

                            data.channel:send( "Quote has been added!\nThanks for submitting…\n`"
                              .. newQuote.text
                              .. "`\nwith "
                              .. tostring(#newQuote.attachments)
                              .. " attachments…! ;)" )
                          end,
                  help  = {
                            "!sbl_quote_add <data>",
                            "adds your random funy BunceQuote™ to the data table",
                            "adds your current username to the quote's \"added by\" attribute",
                            "saves your quotes and uploaded files for the next session",
                            "(can't save attachments if the bot is running on a Windows machine)",
                          },
                },
                
    _size     = {
                  fn    = function( data )
                            local message     = ""
                            local linesTotal  = 0
                            local files       = _sizeFILES
                            
                            for k,v in ipairs(files) do
                              local code  = io.open(v, "r"):read("*a")
                              local lines = select(2, code:gsub("\n", "\n"))
                              lines       = lines and lines+1 or 1
                              message     = message .. "Lines of code in " .. v .. ": " .. tostring( lines ) .. "\n"
                              linesTotal  = linesTotal + lines
                            end
                            data.channel:send( message .. "Total amount of lines of code: " .. tostring( linesTotal ) )
                          end,
                  help  = {
                            "!sbl__size",
                            "responds with current bot code size. purely for shits n giggles :p",
                          },
                },
              
    _TODO     = {
                  help  = {
                            "TODO",
                            "listen to allowed channels for custom keywords, shout random quote with matching keyword",
                            "figure out how to save attachments in a backwards-compatible way on Windows",
                            "make code nicer and easier to read",
                            "modularize the whole thing alot more",
                          },
                },
                
    _NOTES    = {
                  help  = {
                            "NOTES",
                            "*i AM checking the data you're adding to the quote database now",
                            " - i might've missed some dangerous strings though, so feel free to test stuff and report errors",
                            "*(to bot hosters:) make backups of the quotes every once in a while",
                            " - the quotes database will vanish if the serializer encounters a problem",
                          },
                },
                
    _SEPARATOR= {
                  help  = {
                            "==========",
                          },
                },

}
